Kerberos DEFINITIONS ::= BEGIN
   AS-REP ::=    [APPLICATION 11] KDC-REP
   TGS-REP ::=   [APPLICATION 13] KDC-REP

   KDC-REP ::=   SEQUENCE {
        pvno[0]                    INTEGER,
        msg-type[1]                INTEGER,
        padata[2]                  SEQUENCE OF PA-DATA OPTIONAL,
        crealm[3]                  Realm,
        cname[4]                   PrincipalName,
        ticket[5]                  Ticket,
        enc-part[6]                EncryptedData
   }

    PA-DATA ::=        SEQUENCE {
        padata-type[1]        INTEGER,
        padata-value[2]       OCTET STRING
    }

    PrincipalName ::= SEQUENCE {
        name-type    [0] INTEGER,
        name-string  [1] SEQUENCE OF GeneralString
    }

    Realm ::= GeneralString

    KerberosTime ::= GeneralizedTime

    HostAddress ::= SEQUENCE {
        addr-type        [0] INTEGER,
        address  [1] OCTET STRING
    }

    HostAddresses ::= SEQUENCE OF HostAddress

    EncryptedData ::= SEQUENCE {
        etype        [0] INTEGER,
        kvno         [1] INTEGER OPTIONAL,
        cipher       [2] OCTET STRING
    }

    Ticket ::= [APPLICATION 1] SEQUENCE {
        tkt-vno      [0] INTEGER,
        realm        [1] Realm,
        sname        [2] PrincipalName,
        enc-part     [3] EncryptedData
    }

    EncryptionKey   ::= SEQUENCE {
        -- the encryption type
        keytype         [0] INTEGER,
        keyvalue        [1] OCTET STRING
    }

    LastReq     ::= SEQUENCE OF SEQUENCE {
       lr-type         [0] INTEGER,
       lr-value        [1] KerberosTime
    }

    TicketFlags     ::= KerberosFlags
        -- reserved(0),
        -- forwardable(1),
        -- forwarded(2),
        -- proxiable(3),
        -- proxy(4),
        -- may-postdate(5),
        -- postdated(6),
        -- invalid(7),
        -- renewable(8),
        -- initial(9),
        -- pre-authent(10),
        -- hw-authent(11),
        -- transited-policy-checked(12),
        -- ok-as-delegate(13)

    KerberosFlags   ::= BIT STRING (SIZE (32..MAX))
END